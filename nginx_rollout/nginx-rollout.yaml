apiVersion: v1
kind: Service
metadata:
  name: nginx-rollout
  namespace: default
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  default.conf: |
    server {
        listen 80;
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: nginx-rollout
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 5
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          requests:
            cpu: "40m"
            memory: "50Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
  revisionHistoryLimit: 2
  strategy:
    canary:
      canaryMetadata:
        labels:
          argo_rollout_role: canary
      maxSurge: 50%
      maxUnavailable: 20%
      stableMetadata:
        labels:
          argo_rollout_role: stable
      # analysis:
      #   templates:
      #   - templateName: nginx-analysis
      #   startingStep: 2
      #   args:
      #   - name: service-name
      #     value: nginx-rollout
      steps:
      - setWeight: 10
      - pause:
          duration: 360s
      # - analysis:
      #     templates:
      #     - templateName: nginx-analysis
      #     args:
      #     - name: service-name
      #       value: nginx-rollout
      - setWeight: 100
      - pause:
          duration: 60s