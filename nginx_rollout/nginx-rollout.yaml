 apiVersion: argoproj.io/v1alpha1
  kind: Rollout
  metadata:
    name: nginx-rollout
    namespace: default
    labels:
      app: nginx
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: nginx
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - name: nginx
          image: nginx:1.25
          imagePullPolicy: Always
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            requests:
              cpu: "40m"
              memory: "50Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
    revisionHistoryLimit: 2
    strategy:
      canary:
        canaryMetadata:
          labels:
            argo_rollout_role: canary
        maxSurge: 50%
        maxUnavailable: 20%
        stableMetadata:
          labels:
            argo_rollout_role: stable
        analysis:
          templates:
          - templateName: nginx-analysis
          startingStep: 2
          args:
          - name: service-name
            value: nginx-rollout
        steps:
        - setWeight: 10
        - pause:
            duration: 360s
        - analysis:
            templates:
            - templateName: nginx-analysis
            args:
            - name: service-name
              value: nginx-rollout
        - setWeight: 100
        - pause:
            duration: 60s
  ---
  apiVersion: argoproj.io/v1alpha1
  kind: AnalysisTemplate
  metadata:
    name: nginx-analysis
    namespace: default
  spec:
    args:
    - name: service-name
    metrics:
    - name: success-rate
      interval: 60s
      count: 5
      successCondition: result[0] >= 0.95
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            sum(rate(nginx_http_requests_total{service="{{args.service-name}}", status!~"5.."}[2m])) /
            sum(rate(nginx_http_requests_total{service="{{args.service-name}}"}[2m]))
    - name: avg-response-time
      interval: 60s
      count: 5
      successCondition: result[0] < 500
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            histogram_quantile(0.95,
              sum(rate(nginx_http_request_duration_seconds_bucket{service="{{args.service-name}}"}[2m]))
              by (le)
            ) * 1000
